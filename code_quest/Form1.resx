<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="helpProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>